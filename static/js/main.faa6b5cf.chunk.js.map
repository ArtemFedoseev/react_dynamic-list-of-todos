{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoFilters","TodoList","state","todos","props","titleQuery","filter","all","setFilter","event","value","target","useValue","active","completed","setState","setSearchQuery","getFilteredTodos","filteredTodos","todo","title","toLowerCase","includes","randomizeTodos","result","i","length","randomId","Math","floor","random","push","splice","this","selectedUser","onUserSelect","className","htmlFor","id","type","onChange","onClick","map","classnames","e","preventDefault","checked","readOnly","userId","React","Component","getUser","URL","fetch","then","response","json","CurrentUser","userInfo","isLoaded","loadUser","prevProps","a","name","email","phone","resetUser","App","selectedUserId","isLoading","setUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faa6b5cf.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classnames from 'classnames';\n\ntype Props = {\n  todos: Todo[],\n  selectedUser: number,\n  onUserSelect: (userId?: number) => void,\n};\n\ntype State = {\n  todos: Todo[],\n  titleQuery: string,\n  filter: TodoFilters,\n};\n\nenum TodoFilters {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    todos: this.props.todos,\n    titleQuery: '',\n    filter: TodoFilters.all,\n  };\n\n  setFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n    let useValue = TodoFilters.all;\n\n    switch (value) {\n      case 'active':\n        useValue = TodoFilters.active;\n        break;\n      case 'completed':\n        useValue = TodoFilters.completed;\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ filter: useValue });\n  };\n\n  setSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ titleQuery: event.target.value });\n  };\n\n  getFilteredTodos = () => {\n    const { titleQuery, filter, todos } = this.state;\n\n    const filteredTodos = todos.filter(todo => (\n      todo.title.toLowerCase().includes(titleQuery.toLowerCase())\n    ));\n\n    if (filter === TodoFilters.all) {\n      return filteredTodos;\n    }\n\n    return filteredTodos.filter(todo => (filter === TodoFilters.active\n      ? !todo.completed\n      : todo.completed\n    ));\n  };\n\n  randomizeTodos = () => {\n    const todos = [...this.state.todos];\n    const result = [];\n\n    for (let i = 0; i < this.state.todos.length; i += 1) {\n      const randomId = Math.floor(Math.random() * todos.length);\n\n      result.push(todos.splice(randomId, 1)[0]);\n    }\n\n    this.setState({ todos: result });\n  };\n\n  render() {\n    const { selectedUser, onUserSelect } = this.props;\n    const { titleQuery, filter } = this.state;\n    const filteredTodos = this.getFilteredTodos();\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <label htmlFor=\"title-input\">\n          Title:\n          {' '}\n          <input\n            id=\"title-input\"\n            type=\"text\"\n            value={titleQuery}\n            onChange={this.setSearchQuery}\n          />\n        </label>\n\n        <br />\n\n        <label htmlFor=\"select-flter\">\n          Show:\n          {' '}\n          <select id=\"select-flter\" value={filter} onChange={this.setFilter}>\n            <option value={TodoFilters.all}>\n              All\n            </option>\n            <option value={TodoFilters.active}>\n              Active\n            </option>\n            <option value={TodoFilters.completed}>\n              Completed\n            </option>\n          </select>\n        </label>\n\n        <br />\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.randomizeTodos();\n          }}\n        >\n          Randomize\n        </button>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classnames(\n                  'TodoList__item',\n                  { 'TodoList__item--checked': todo.completed },\n                  { 'TodoList__item--unchecked': !todo.completed },\n                )}\n              >\n                <label htmlFor={`todo-${todo.id}`}>\n                  <input\n                    id={`todo-${todo.id}`}\n                    type=\"checkbox\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                    }}\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classnames(\n                    'TodoList__user-button',\n                    'button',\n                    { 'TodoList__user-button--selected': selectedUser === todo.userId },\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    onUserSelect(todo.userId);\n                  }}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","export const getTodos = () => {\n  const URL = 'https://mate.academy/students-api/todos';\n\n  return fetch(URL)\n    .then(response => response.json());\n};\n\nexport const getUser = (userId: number) => {\n  const URL = `https://mate.academy/students-api/users/${userId}`;\n\n  return fetch(URL)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ntype Props = {\n  userId: number,\n  resetUser: (userId?: number) => void,\n};\n\ntype State = {\n  userInfo: User,\n  isLoaded: boolean,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state = {\n    userInfo: {} as User,\n    isLoaded: false,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    this.setState({ isLoaded: false });\n\n    const userInfo = await getUser(this.props.userId);\n\n    this.setState({\n      userInfo,\n      isLoaded: true,\n    });\n  }\n\n  render() {\n    const {\n      id, name, email, phone,\n    } = this.state.userInfo;\n\n    return (\n      <div className=\"CurrentUser\">\n        {this.state.isLoaded ? (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {' '}\n                {id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">\n              {name}\n            </h3>\n            <p className=\"CurrentUser__email\">\n              {email}\n            </p>\n            <p className=\"CurrentUser__phone\">\n              {phone}\n            </p>\n            <button\n              type=\"button\"\n              className=\"CurrentUser__clear button\"\n              onClick={() => {\n                this.props.resetUser();\n              }}\n            >\n              Clear\n            </button>\n          </>\n        ) : (\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Loading user data\n            </span>\n          </h2>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\ninterface State {\n  todos: Todo[],\n  selectedUserId: number,\n  isLoading: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [] as Todo[],\n    selectedUserId: 0,\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos,\n      isLoading: false,\n    });\n  }\n\n  setUser = (userId = 0) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  render() {\n    const { selectedUserId, todos, isLoading } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isLoading ? 'Loading todos' : (\n          <div className=\"App__sidebar\">\n            <TodoList\n              todos={todos}\n              selectedUser={selectedUserId}\n              onUserSelect={this.setUser}\n            />\n          </div>\n        )}\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {!!selectedUserId && (\n              <CurrentUser\n                userId={selectedUserId}\n                resetUser={this.setUser}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}